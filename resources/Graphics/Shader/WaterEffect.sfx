uniform float Time;
uniform float TerrainSize;
uniform vec3 Position;
uniform mat4 WaterProjection;
varying vec3 eyeDir;

void main()
{
    vec3 t = normalize(gl_NormalMatrix * vec3(1, 0, 0));
    vec3 n = normalize(gl_NormalMatrix * vec3(0, 1, 0));
    vec3 b = cross(n, t);
    
    vec4 v = gl_Vertex;
    v.y += 0.075 * sin(0.75 * v.x + Time * 2.0) + 0.075 * sin(0.77 * v.z + Time * 1.7);

	gl_Position = gl_ModelViewProjectionMatrix * v;	
	eyeDir = vec3(gl_ModelViewMatrix * gl_Vertex);
	
	vec3 tmp;
    tmp.x = dot(eyeDir, t);
    tmp.y = dot(eyeDir, b);
    tmp.z = dot(eyeDir, n);
    eyeDir = normalize(tmp);
	
    gl_TexCoord[0] = (WaterProjection * gl_ModelViewProjectionMatrix) * gl_Vertex;

    gl_TexCoord[1].x = 0.215 * gl_Vertex.x + Time * 0.08;
    gl_TexCoord[1].y = 0.225 * gl_Vertex.z + Time * 0.08; 
    gl_TexCoord[2].x = 1.0 - (0.221 * gl_Vertex.x - Time * 0.08);
    gl_TexCoord[2].y = 1.0 - (0.229 * gl_Vertex.z - Time * 0.08);
    
	gl_TexCoord[3].s = gl_Vertex.x / TerrainSize + 0.5;
	gl_TexCoord[3].t = gl_Vertex.z / TerrainSize + 0.5;
    
    float a = 1.0 - ((gl_Position.z) / (gl_Fog.end)) * 1.0;
    gl_FrontColor = gl_Color;
    gl_FrontColor.a *= a;  
}